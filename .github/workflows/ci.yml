name: CI
on: [push, pull_request]
jobs:
  test_postgres:
    strategy:
      matrix:
        pg:
          - 13
          - 14
          - 15
          - 16
          - 17
        ruby:
          - "3.2"
          - "3.3"
          - "3.4"
        gemfile:
          - rails_7_2
          - rails_8_0
          - rails_8_1
    name: PostgreSQL ${{ matrix.pg }} - Ruby ${{ matrix.ruby }} - ${{ matrix.gemfile }}
    runs-on: ubuntu-latest
    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: gemfiles/${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v5
      - name: Start the postgres container
        run: docker compose up -d
        env:
          PGVERSION: ${{ matrix.pg }}
      - name: Setup Ruby using .ruby-version file
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: bundle exec rake spec
        env:
          DATABASE: postgresql
  test_sqlite:
    strategy:
      matrix:
        ruby:
          - "3.2"
          - "3.3"
          - "3.4"
        gemfile:
          - rails_7_2
          - rails_8_0
          - rails_8_1
    name: SQLite - Ruby ${{ matrix.ruby }} - ${{ matrix.gemfile }}
    runs-on: ubuntu-latest
    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: gemfiles/${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v5
      - name: Setup Ruby using .ruby-version file
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: bundle exec rake spec
        env:
          DATABASE: sqlite
